cloudflared:
  enabled: false
  token: "TOKEN-HERE"

# Split cloudflare tunnel traffic to multiple endpoints
# Create only if cloudflared is enabled
prizma:
  enabled: true
  # refractions:
  #   supervisor:
  #     from: your-supervisor-url.com
  #     to: your-supervisor-url.com:443
  #   concierge:
  #     from: your-in-cluster-concierge-service.namespace
  #     to: your-in-cluster-concierge-service.namespace:443
  #   cloud-api: #lets you issue pinniped get kubeconfig with validation
  #     from: your-cloud-provider-k8s-api
  #     to: your-cloud-provider-k8s-api:443

# ClusterRoleBinding to create in the cluster
# Create only if concierge is enabled
teams: []
  # dev:
  #   role: editor
  #   team: organization/team-dev
  # devops:
  #   role: cluster-admin
  #   team: organization/team-devops


# GitHub Providers to create in the supervisor cluster
# Create only if supervisor is enabled
githubProviders: []
  # Name of the org
  # bestbytes:
  #   # GitHub App ID and Secret:
  #   clientID: id
  #   clientSecret: secret

# Federation Domains to create in the supervisor cluster
# Create only if supervisor is enabled
federationDomains: []
  # cluster:
  #   tlsSecretName: tls-secret-name
  #   issuer: https://supervisor-url/issuer-path
  #   identityProviders:
  #     bestbytes:
  #       teams: |
  #         ["organization/team-devs", "organization/team-devops"]

# JWT Authenticators for Concierge
# Create only if concierge is enabled
jwtAuths: []
  # bestbytes:
  #   issuer: https://supervisor-url/issuer-path
  #   audience: arbitrary-but-unique-audience

pinniped:
  supervisor:
    enabled: false
  concierge:
    enabled: true
    credentialIssuerConfig: |
      impersonationProxy:
        mode: enabled
        service:
          type: ClusterIP
        externalEndpoint: {{ .Release.Name }}-pinniped-concierge-impersonation-proxy-cluster-ip.{{ .Release.Namespace }}:443
