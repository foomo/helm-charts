{{- if .Values.cloudflared.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "beam.cloudflared.fullname" . }}
  labels:
    {{- include "beam.cloudflared.labels" . | nindent 4 }}
  namespace: {{ include "beam.namespace" . }}
spec:
  {{- if not .Values.cloudflared.autoscaling.enabled }}
  replicas: {{ .Values.cloudflared.replicas }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "beam.cloudflared.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "beam.cloudflared.labels" . | nindent 8 }}
        {{- with .Values.cloudflared.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        # These are here so the deployment rolls when the config or secret change.
        checksum/configmap: {{ include (print $.Template.BasePath "/cloudflared/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/cloudflared/secret.yaml") . | sha256sum }}
        {{- with .Values.cloudflared.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "beam.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automount }}
      {{- with .Values.cloudflared.image.pullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cloudflared.podSecurityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cloudflared.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: cloudflared
        image: "{{ .Values.cloudflared.image.repository }}:{{ .Values.cloudflared.image.tag }}"
        imagePullPolicy: {{ .Values.cloudflared.image.pullPolicy }}
        ports:
          - name: http-metrics
            containerPort: 2000
            protocol: TCP
        {{- with .Values.cloudflared.extraEnv }}
        env: {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.cloudflared.extraEnvFrom }}
        envFrom: {{- toYaml . | nindent 12 }}
        {{- end }}
        args:
          - tunnel
          # Points cloudflared to the config file, which configures what
          # cloudflared will actually do. This file is created by a ConfigMap.
          - --config
          - /etc/cloudflared/config/config.yaml
          - run
        {{- with .Values.cloudflared.startupProbe }}
        startupProbe: {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.cloudflared.readinessProbe }}
        readinessProbe: {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.cloudflared.livenessProbe }}
        livenessProbe: {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.cloudflared.resources }}
        resources: {{- toYaml . | nindent 12 }}
        {{- end }}
        volumeMounts:
          - name: config
            mountPath: /etc/cloudflared/config
            readOnly: true
          # Each tunnel has an associated "credentials file" which authorizes machines
          # to run the tunnel. cloudflared will read this file from its local filesystem,
          # and it'll be stored in a k8s secret.
          - name: creds
            mountPath: /etc/cloudflared/creds
            readOnly: true
          {{- with .Values.cloudflared.extraVolumeMounts }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.cloudflaredSidecars }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.cloudflaredSplitter.enabled }}
      - name: splitter
        image: "{{ .Values.cloudflaredSplitter.image.repository }}:{{ .Values.cloudflaredSplitter.image.tag }}"
        imagePullPolicy: {{ .Values.cloudflaredSplitter.image.pullPolicy }}
        {{- with .Values.cloudflaredSplitter.securityContext }}
        securityContext: {{- toYaml . | nindent 12 }}
        {{- end }}
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: https
            containerPort: 443
            protocol: TCP
        {{- with .Values.cloudflaredSplitter.extraEnv }}
        env: {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.cloudflaredSplitter.extraEnvFrom }}
        envFrom: {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.cloudflaredSplitter.startupProbe }}
        startupProbe: {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.cloudflaredSplitter.readinessProbe }}
        readinessProbe: {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.cloudflaredSplitter.livenessProbe }}
        livenessProbe: {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.cloudflaredSplitter.resources }}
        resources: {{- toYaml . | nindent 12 }}
        {{- end }}
        volumeMounts:
          - name: splitter-config
            mountPath: /etc/nginx
          {{- with .Values.cloudflaredSplitter.extraVolumeMounts }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      volumes:
        - name: creds
          secret:
            secretName: {{ include "beam.cloudflared.fullname" . }}
        - name: config
          configMap:
            name: {{ include "beam.cloudflared.fullname" . }}
            items:
              - key: config.yaml
                path: config.yaml
        {{- if .Values.cloudflaredSplitter.enabled }}
        - name: splitter-config
          configMap:
            name: {{ include "beam.cloudflared.fullname" . }}
            items:
              - key: nginx.conf
                path: nginx.conf
        {{- end }}
        {{- with .Values.cloudflared.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.cloudflared.scheduling.enabled }}
      {{- with .Values.cloudflared.scheduling.priorityClass }}
      priorityClassName: {{ . }}
      {{- end }}
      affinity:
        {{- with .Values.cloudflared.scheduling.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 10
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                   {{- range $k, $v := include "beam.cloudflared.selectorLabels" . | fromYaml }}
                    - key: {{ $k }}
                      operator: In
                      values:
                        - {{ $v }}
                   {{- end }}
      {{- with .Values.cloudflared.scheduling.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.cloudflared.scheduling.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.cloudflared.dnsConfig }}
      dnsConfig: {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
