# yaml-language-server: $schema=values.schema.json

# @schema
# type: string
# @schema
# -- Overrides the chart's name
# @section -- Overrides
nameOverride: ''
# @schema
# type: string
# @schema
# -- Overrides the chart's computed fullname
# @section -- Overrides
fullnameOverride: ''
# @schema
# type: string
# @schema
# -- The name of the Namespace to deploy
# @section -- Overrides
namespaceOverride: ''

# @schema
# type: integer
# @schema
# -- Number of revisions to keep
# @section -- General
revisionHistoryLimit: 10

# @schema
# type: object
# @schema
# Cloudflared settings
cloudflared:
  # @schema
  # type: boolean
  # @schema
  # -- Indicates wether to enable it or not
  # @section -- Cloudflared settings
  enabled: false
  # @schema
  # type: string
  # @schema
  # -- Your Cloudflare account number.
  # @section -- Cloudflared settings
  account: ''
  # @schema
  # type: string
  # @schema
  # -- The name of the tunnel this instance will serve
  # @section -- Cloudflared settings
  tunnelName: ''
  # @schema
  # type: string
  # @schema
  # -- The ID of the above tunnel.
  # @section -- Cloudflared settings
  tunnelId: ''
  # @schema
  # type: string
  # @schema
  # -- The secret for the tunnel.
  # @section -- Cloudflared settings
  secret: ''
  # @schema
  # type: boolean
  # @schema
  # -- If true, turn on WARP routing for TCP
  # @section -- Cloudflared settings
  enableWarp: false
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Define ingress rules for the tunnel ([read more](https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/configuration-file/ingress))
  # @section -- Cloudflared settings
  ingress: []
  # ingress:
  # The first rule proxies traffic to the httpbin sample service named web-server at port 80
  # - hostname: tunnel.example.com
  #   service: http://web-service:80
  # This rule sends traffic to the built-in hello-world HTTP server. This can help debug connectivity
  # issues. If hello.example.com resolves and tunnel.example.com does not, then the problem is
  # in the connection from cloudflared to your local service, not from the internet to cloudflared.
  # - hostname: hello.example.com
  #   service: hello_world
  # @schema
  # type: number
  # @schema
  # -- Number of replications
  # @section -- Cloudflared settings
  replicas: 2
  # @schema
  # type: object
  # @schema
  # Image settings
  image:
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Image repository
    # @section -- Cloudflared settings
    repository: 'cloudflare/cloudflared'
    # @schema
    # enum: [IfNotPresent, Always]
    # @schema
    # -- Image tag
    # @section -- Cloudflared settings
    pullPolicy: IfNotPresent
    # @schema
    # type: array
    # items:
    #   type: object
    #   additionalProperties: true
    # @schema
    # -- Image pull secrets
    # @section -- Cloudflared settings
    pullSecrets: [ ]
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Image tag
    # @section -- Cloudflared settings
    tag: '2025.7.0' # https://github.com/cloudflare/cloudflared/releases
  # @schema
  # type: object
  # @schema
  # Service Monitor settings
  podMonitor:
    # @schema
    # type: boolean
    # @schema
    # -- If enabled, ServiceMonitor resources for Prometheus Operator are created
    # @section -- Cloudflared settings
    enabled: false
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Additional ServiceMonitor labels
    # @section -- Cloudflared settings
    additionalLabels: { }
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- ServiceMonitor annotations
    # @section -- Cloudflared settings
    annotations: { }
    # @schema
    # type: string
    # @schema
    # -- ServiceMonitor scrape interval
    # @section -- Cloudflared settings
    interval: ''
    # @schema
    # type: string
    # @schema
    # -- ServiceMonitor scrape timeout in Go duration format (e.g. 15s)
    # @section -- Cloudflared settings
    scrapeTimeout: ''
    # @schema
    # type: array
    # items:
    #   type: object
    #   additionalProperties: true
    # @schema
    # -- ServiceMonitor will add labels from the service to the Prometheus metric
    # @section -- Cloudflared settings
    targetLabels: [ ]
    # @schema
    # type: array
    # items:
    #   type: object
    #   additionalProperties: true
    # @schema
    # -- ServiceMonitor relabel configs to apply to samples before scraping.
    # @section -- Cloudflared settings
    relabelings: [ ]
    # @schema
    # type: array
    # items:
    #   type: object
    #   additionalProperties: true
    # @schema
    # -- ServiceMonitor metric relabel configs to apply to samples before ingestion
    # @section -- Cloudflared settings
    metricRelabelings: [ ]
  # @schema
  # type: object
  # @schema
  # Autoscaling settings
  autoscaling:
    # @schema
    # type: boolean
    # @schema
    # -- Specifies whether a auto scaling should be enabled
    # @section -- Cloudflared settings
    enabled: false
    # @schema
    # type: integer
    # @schema
    # -- Minimum replication number
    # @section -- Cloudflared settings
    minReplicas: 1
    # @schema
    # type: integer
    # @schema
    # -- Maximum replication number
    # @section -- Cloudflared settings
    maxReplicas: 9
    # @schema
    # type: [integer, string]
    # @schema
    # -- Minimum availablity
    # @section -- Cloudflared settings
    minAvailable: ''
    # @schema
    # type: [integer, string]
    # @schema
    # -- Maximum unavailablity
    # @section -- Cloudflared settings
    maxUnavailable: 1
    # @schema
    # type: [integer, null]
    # @schema
    # -- Target CPU utilization
    # @section -- Cloudflared settings
    targetCPU: 80
    # @schema
    # type: [integer, null]
    # @schema
    # -- Target Memory utilization
    # @section -- Cloudflared settings
    targetMemory: null
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Additional scaling metrics
    # @section -- Cloudflared settings
    additionalMetrics: { }
    #  - type: Pods
    #    pods:
    #      metric:
    #        name: loki_lines_total
    #      target:
    #        type: AverageValue
    #        averageValue: 10k
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Autoscaling behavior settings
    # @section -- Cloudflared settings
    behavior: {}
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Host aliases to add
  # @section -- Cloudflared settings
  hostAliases: []
  #  - ip: 1.2.3.4
  #    hostnames:
  #      - domain.tld
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Annotations for pods
  # @section -- Cloudflared settings
  podAnnotations: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Labels for pods
  # @section -- Cloudflared settings
  podLabels: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- The SecurityContext for pods
  # @section -- Cloudflared settings
  podSecurityContext: {}
  # podSecurityContext:
  #   runAsNonRoot: true
  #   runAsUser: 65532
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Security items for one container. We lock it down.
  # @section -- Cloudflared settings
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  # @schema
  # type: [object, null]
  # additionalProperties: true
  # @schema
  # -- Resource request & limits.
  # @section -- Cloudflared settings
  resources: {}
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  # @schema
  # type: [object, null]
  # additionalProperties: true
  # @schema
  # -- Readiness probe settings for pods.
  # @section -- Cloudflared settings
  startupProbe:
    httpGet:
      path: /ready
      port: 2000
  # @schema
  # type: [object, null]
  # additionalProperties: true
  # @schema
  # -- Readiness probe settings for pods.
  # @section -- Cloudflared settings
  readinessProbe:
    httpGet:
      path: /ready
      port: 2000
  # @schema
  # type: [object, null]
  # additionalProperties: true
  # @schema
  # -- Liveness probe settings for pods.
  # @section -- Cloudflared settings
  livenessProbe:
    httpGet:
      path: /ready
      port: 2000
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 10
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables to add
  # @section -- Cloudflared settings
  extraEnv: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables from secrets or configmaps to add
  # @section -- Cloudflared settings
  extraEnvFrom: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volume mounts to add
  # @section -- Cloudflared settings
  extraVolumeMounts: []
  # extraVolumeMounts:
  #   - name: foo
  #     mountPath: "/etc/foo"
  #     readOnly: true
  # -- Volumes to add
  # @section -- Cloudflared settings
  extraVolumes: []
  # extraVolumes:
  #   - name: foo
  #     secret:
  #       secretName: mysecret
  #       optional: false
  # @schema
  # type: object
  # @schema
  # Scheduling settings
  scheduling:
    # @schema
    # type: boolean
    # @schema
    # -- Indicates wether scheduling is enabled or not
    # @section -- Cloudflared settings
    enabled: true
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Affinity for pod assignment
    # @section -- Cloudflared settings
    affinity: {}
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Node labels for pod assignment
    # @section -- Cloudflared settings
    nodeSelector: {}
    # @schema
    # type: array
    # items:
    #   type: object
    #   additionalProperties: true
    # @schema
    # -- Tolerations for pod assignment
    # @section -- Cloudflared settings
    tolerations: []
    # @schema
    # type: [string, null]
    # additionalProperties: true
    # @schema
    # -- Priority class name
    # @section -- Cloudflared settings
    priorityClass: null
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- DNS config
  # @section -- Cloudflared settings
  dnsConfig: {}

# Split cloudflare tunnel traffic to multiple endpoints
cloudflaredSplitter:
  # @schema
  # type: boolean
  # @schema
  # -- Enable cloudflared splitter
  # @section -- Cloudflared Splitter settings
  enabled: false
  # @schema
  # type: object
  # additionalProperties:
  #   type: string
  # @schema
  # -- Mao of additional enpoints
  # @section -- Cloudflared Splitter settings
  beams: {}
  # beams:
  #   kubectl: your-cloud-provider-k8s-api
  # @schema
  # type: object
  # @schema
  # Image settings
  image:
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Image repository
    # @section -- Cloudflared Splitter settings
    repository: 'nginx'
    # @schema
    # enum: [IfNotPresent, Always]
    # @schema
    # -- Image tag
    # @section -- Cloudflared Splitter settings
    pullPolicy: IfNotPresent
    # @schema
    # type: string
    # required: true
    # @schema
    # -- Image tag
    # @section -- Cloudflared Splitter settings
    tag: '1.29.0' # https://github.com/nginx/nginx/releases
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Security Context
  # @section -- Cloudflared Splitter settings
  securityContext: {}
  # securityContext:
  #   capabilities:
  #     drop:
  #       - ALL
  #   readOnlyRootFilesystem: true
  #   runAsNonRoot: true
  #   runAsUser: 1000
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables to add
  # @section -- Cloudflared Splitter settings
  extraEnv: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables from secrets or configmaps to add
  # @section -- Cloudflared Splitter settings
  extraEnvFrom: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volume mounts to add
  # @section -- Cloudflared Splitter settings
  extraVolumeMounts: []
  # extraVolumeMounts:
  #   - name: foo
  #     mountPath: "/etc/foo"
  #     readOnly: true
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Resource request & limits.
  # @section -- Cloudflared Splitter settings
  resources: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Startup probe settings for pods
  # @section -- Cloudflared Splitter settings
  startProbe: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Liveness probe settings for pods
  # @section -- Cloudflared Splitter settings
  livenessProbe: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Readiness probe settings for pods
  # @section -- Cloudflared Splitter settings
  readinessProbe: {}

# @schema
# type: array
# items:
#   type: object
#   additionalProperties: true
# @schema
# -- Additional cloudflared sidecars
# @section -- Cloudflared Sidecars settings
cloudflaredSidecars: []

# @schema
# type: object
# additionalProperties: true
# @schema
# Pinneped dependency ([read more](https://github.com/bitnami/charts/blob/main/bitnami/pinniped/values.yaml))
pinniped:
  # @schema
  # type: boolean
  # @schema
  # -- Enable pinniped
  # @section -- Pinniped settings
  enabled: false
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # Concierge settings ([read more](https://github.com/bitnami/charts/blob/main/bitnami/pinniped/values.yaml#L90))
  concierge:
    # @schema
    # type: boolean
    # @schema
    # -- Enable concierge
    # @section -- Pinniped settings
    enabled: false
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- ClusterRoleBinding to create in the cluster for teams (groups)
    # @section -- Pinniped settings
    teams: {}
    # teams:
    #   dev:
    #     role: editor
    #     team: organization/team-dev
    #   devops:
    #     role: cluster-admin
    #     team: organization/team-devops
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- ClusterRoleBinding to create in the cluster for users
    # @section -- Pinniped settings
    users: {}
    # users:
    #   user1:
    #     role: editor
    #     user: user@name.com
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- JWT Authenticators for Concierge
    # @section -- Pinniped settings
    jwtAuths: {}
    # jwtAuths:
    #   your-org:
    #     issuer: https://beam.your-domain.com/issuer-path
    #     audience: arbitrary-but-unique-audience
    # @schema
    # type: string
    # @schema
    # -- Override dependency
    # @section -- Pinniped settings
    credentialIssuerConfig: |
      impersonationProxy:
        mode: enabled
        service:
          type: ClusterIP
        externalEndpoint: {{ .Release.Name }}-pinniped-concierge-impersonation-proxy-cluster-ip.{{ .Release.Namespace }}:443
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # Supervisor settings ([read more](https://github.com/bitnami/charts/blob/main/bitnami/pinniped/values.yaml#L90))
  supervisor:
    # @schema
    # type: boolean
    # @schema
    # -- Enable supervisor
    # @section -- Pinniped settings
    enabled: false
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- GitHub Providers to create in the supervisor cluster
    # @section -- Pinniped settings
    githubProviders: {}
    # githubProviders:
    #   foomo:
    #     clientId: id
    #     clientSecret: secret
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Federation Domains to create in the supervisor cluster
    # @section -- Pinniped settings
    federationDomains: {}
    # federationDomains:
    #   cluster:
    #     tlsSecretName: tls-secret-name
    #     issuer: https://beam.your-domain.com/issuer-path
    #     identityProviders:
    #       foomo:
    #         teams:
    #           - organization/team-devs
    #           - organization/team-devops

# @schema
# type: object
# @schema
# ServiceAccount settings
serviceAccount:
  # @schema
  # type: string
  # @schema
  # -- The name of the service account to use.
  # @section -- Service account settings
  name: ''
  # @schema
  # type: boolean
  # @schema
  # -- Specifies whether a service account should be created
  # @section -- Service account settings
  create: true
  # @schema
  # type: boolean
  # @schema
  # -- Automatically mount a ServiceAccount's API credentials?
  # @section -- Service account settings
  automount: true
  # @schema
  # type: object
  # additionalProperties:
  #   type: string
  # @schema
  # -- Annotations to add to the service account
  # @section -- Service account settings
  annotations: {}
