# -- Overrides the chart's name
nameOverride: ""
# -- Overrides the chart's computed fullname
fullnameOverride: ""
# -- The name of the Namespace to deploy
# If not set, `.Release.Namespace` is used
namespaceOverride: ""

# -- Number of revisions to retain to allow rollback
revisionHistoryLimit: 10

cloudflared:
  enabled: false
  # Your Cloudflare account number.
  account: ""
  # The name of the tunnel this instance will serve
  tunnelName: ""
  # The ID of the above tunnel.
  tunnelId: ""
  # The secret for the tunnel.
  secret: ""
  # If true, turn on WARP routing for TCP
  enableWarp: false
  # Define ingress rules for the tunnel. See
  # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/configuration-file/ingress
  ingress: []
    # The first rule proxies traffic to the httpbin sample service named web-server at port 80
    # - hostname: tunnel.example.com
    #  service: http://web-service:80
    # This rule sends traffic to the built-in hello-world HTTP server. This can help debug connectivity
    # issues. If hello.example.com resolves and tunnel.example.com does not, then the problem is
    # in the connection from cloudflared to your local service, not from the internet to cloudflared.
    # - hostname: hello.example.com
    #   service: hello_world
  # Container image
  image:
    # -- The image repository
    repository: 'cloudflare/cloudflared'
    # -- The image pull policy
    pullPolicy: IfNotPresent
    # -- The image tag
    tag: '2024.8.3'
  # -- Number of replicas
  replicaCount: 2
  # -- Pod Disruption Budget maxUnavailable
  maxUnavailable: null
  # -- Pod Monitor configuration
  podMonitor:
    # -- If enabled, PodMonitor resources for Prometheus Operator are created
    enabled: false
  # Autoscaling settings
  autoscaling:
    # -- Enable autoscaling
    enabled: false
    # -- Minimum autoscaling replicas
    minReplicas: 1
    # -- Maximum autoscaling replicas
    maxReplicas: 9
    # -- Target CPU utilisation percentage
    targetCPUUtilizationPercentage: 80
    # -- Target memory utilisation percentage
    targetMemoryUtilizationPercentage: null
    # -- Custom metrics using the HPA/v2 schema (for example, Pods, Object or External metrics)
    customMetrics: [ ]
    #  - type: Pods
    #    pods:
    #      metric:
    #        name: loki_lines_total
    #      target:
    #        type: AverageValue
    #        averageValue: 10k
    behavior:
      # -- Enable autoscaling behaviours
      enabled: false
      # -- Scale down policies, must conform to HPAScalingRules
      scaleDown: { }
      # -- Scale up policies, must conform to HPAScalingRules
      scaleUp: { }
  # -- Host aliases to add
  hostAliases: []
  #  - ip: 1.2.3.4
  #    hostnames:
  #      - domain.tld
  # -- Image pull secrets
  imagePullSecrets: []
  # -- Annotations for pods
  podAnnotations: {}
  # -- Labels for pods
  podLabels: {}
  # -- The SecurityContext for pods
  # Security items common to everything in the pod.  Here we require that it
  # does not run as the user defined in the image, literally named "nonroot".
  podSecurityContext: {}
#    runAsNonRoot: true
#    runAsUser: 65532
  # Security items for one container. We lock it down.
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  # -- Resource request & limits.
  resources: {}
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  # @default -- Liveness probe settings for pods.
  livenessProbe:
    httpGet:
      path: /ready
      port: 2000
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 10
  # @default -- Readiness probe settings for pods.
  readinessProbe:
    httpGet:
      path: /ready
      port: 2000
  # -- Environment variables to add
  extraEnv: []
  # -- Environment variables from secrets or configmaps to add
  extraEnvFrom: []
  # -- Volume mounts to add
  extraVolumeMounts: []
  #  - name: foo
  #    mountPath: "/etc/foo"
  #    readOnly: true
  # -- Volumes to add
  extraVolumes: []
  #  - name: foo
  #    secret:
  #      secretName: mysecret
  #      optional: false
  # -- Tolerations settings for pods.
  nodeSelector: {}
  # -- Tolerations settings for pods.
  tolerations: []
  # -- Affinity settings for pods.
  affinity: {}
  # -- DNSConfig settings for pods.
  dnsConfig: {}

# Split cloudflare tunnel traffic to multiple endpoints
cloudflaredSplitter:
  # --- Enable cloudflared splitter
  enabled: false
  # --- List of additional enpoints
  # beams:
  #   kubectl: your-cloud-provider-k8s-api
  beams: {}
  # Container image
  image:
    # -- The image repository
    repository: 'nginx'
    # -- The image pull policy
    pullPolicy: IfNotPresent
    # -- The image tag
    tag: '1.27.0'
  # --- Security context
  securityContext: {}
  #  capabilities:
  #    drop:
  #      - ALL
  #  readOnlyRootFilesystem: true
  #  runAsNonRoot: true
  #  runAsUser: 1000
  # -- Environment variables to add
  extraEnv: []
  # -- Environment variables from secrets or configmaps to add
  extraEnvFrom: []
  # -- Volume mounts to add
  extraVolumeMounts: []
  #  - name: foo
  #    mountPath: "/etc/foo"
  #    readOnly: true
  # -- Resource request & limits.
  resources: {}
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  # @default -- Liveness probe settings for pods.
  livenessProbe: {}
  #   httpGet:
  #     path: /
  #     port: http
  # # @default -- Readiness probe settings for pods.
  readinessProbe: {}
  #   httpGet:
  #     path: /
  #     port: http

# --- Additional cloudflared sidecars
cloudflaredSidecars: []

## Pinneped dependency
## see https://github.com/bitnami/charts/blob/main/bitnami/pinniped/values.yaml
pinniped:
  # --- Enable pinniped
  enabled: false
  # Concierge settings (https://github.com/bitnami/charts/blob/main/bitnami/pinniped/values.yaml#L90)
  concierge:
    # --- Enable concierge
    enabled: false
    # --- ClusterRoleBinding to create in the cluster
    # teams:
    #   dev:
    #     role: editor
    #     team: organization/team-dev
    #   devops:
    #     role: cluster-admin
    #     team: organization/team-devops
    teams: {}
    # --- JWT Authenticators for Concierge
    # jwtAuths:
    #   your-org:
    #     issuer: https://beam.your-domain.com/issuer-path
    #     audience: arbitrary-but-unique-audience
    jwtAuths: {}
    # Override dependency
    credentialIssuerConfig: |
      impersonationProxy:
        mode: enabled
        service:
          type: ClusterIP
        externalEndpoint: {{ .Release.Name }}-pinniped-concierge-impersonation-proxy-cluster-ip.{{ .Release.Namespace }}:443
  # Supervisor settings (https://github.com/bitnami/charts/blob/main/bitnami/pinniped/values.yaml#L90)
  supervisor:
    # --- Enable supervisor
    enabled: false
    # --- GitHub Providers to create in the supervisor cluster
    # githubProviders:
    #   foomo:
    #     clientId: id
    #     clientSecret: secret
    githubProviders: {}
    # --- Federation Domains to create in the supervisor cluster
    # federationDomains:
    #   cluster:
    #     tlsSecretName: tls-secret-name
    #     issuer: https://beam.your-domain.com/issuer-path
    #     identityProviders:
    #       foomo:
    #         teams:
    #           - organization/team-devs
    #           - organization/team-devops
    federationDomains: {}


# ServiceAccount configuration
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""
