# yaml-language-server: $schema=values.schema.json

# @schema
# type: string
# @schema
# -- Overrides the chart's name
# @section -- Overrides
nameOverride: ''
# @schema
# type: string
# @schema
# -- Overrides the chart's computed fullname
# @section -- Overrides
fullnameOverride: ''
# @schema
# type: string
# @schema
# -- The name of the Namespace to deploy
# @section -- Overrides
namespaceOverride: ''

# @schema
# type: integer
# @schema
# -- Number of revisions to keep
# @section -- General
revisionHistoryLimit: 10

# @schema
# type: object
# @schema
# TLS Reverse Proxy settings
# All urls have to be valid https urls, so proxy https traffic to your containers.
# Create a self-signed certificate by running
# $ openssl req -x509 -newkey rsa:2048 -keyout tls.key -out tls.crt -nodes -subj '/CN=sesamy'
proxy:
  # @schema
  # type: object
  # @schema
  # TLS settings
  tls:
    # @schema
    # type: string
    # @schema
    # -- Base64 encoded TLS key
    # @section -- Proxy
    key: ""
    # @schema
    # type: string
    # @schema
    # -- Base64 encoded TLS cert
    # @section -- Proxy
    crt: ""
  # @schema
  # type: object
  # @schema
  # Docker image
  image:
    # @schema
    # enum: [IfNotPresent, Always]
    # @schema
    # -- Image tag
    # @section -- Proxy
    pullPolicy: IfNotPresent
    # @schema
    # type: string
    # @schema
    # -- Image repository
    # @section -- Proxy
    repository: 'nginx'
    # @schema
    # type: string
    # @schema
    # -- Image tag
    # @section -- Proxy
    tag: '1.29-alpine'
  # @schema
  # type: object
  # @schema
  # -- Resource request & limits.
  # @section -- Proxy
  resources: {}
  # @schema
  # type: string
  # @schema
  # -- Nginx SSL Reverse Proxy config.
  # @section -- Proxy
  config: |
    server {
      listen              443 ssl;

      ssl_certificate     /etc/nginx/ssl/tls.crt;
      ssl_certificate_key /etc/nginx/ssl/tls.key;
      ssl_session_cache   shared:SSL:10m;
      ssl_session_timeout 1h;
      ssl_buffer_size     8k;

      location / {
          proxy_pass         http://0.0.0.0:{{ .Values.umami.service.port }};
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection 'upgrade';
          proxy_cache_bypass $http_upgrade;
      }
    }

# @schema
# type: object
# @schema
# Umami settings
umami:
  # @schema
  # type: object
  # @schema
  # Umami configurations
  config:
    # @schema
    # type: string
    # @schema
    # -- Disables users, teams, and websites settings page.
    # @section -- Umami
    cloudMode: '1'
    # @schema
    # type: string
    # @schema
    # -- HTTP header to check for the client's IP address. This is useful when you're behind a proxy that uses non-standard headers.
    # @section -- Umami
    clientIpHeader: ''
    # @schema
    # type: string
    # @schema
    # -- Allows you to send metrics to a location different than the default `/api/send`. This is to help you avoid some ad-blockers.
    # @section -- Umami
    collectApiEndpoint: ''
    # @schema
    # type: string
    # @schema
    # -- How many seconds a CORS preflight should last. Default is 24 hours.
    # @section -- Umami
    corsMaxAge: '86400'
    # @schema
    # type: string
    # @schema
    # -- By default bots are excluded from statistics. This disables checking for bots.
    # @section -- Umami
    disableBotCheck: '1'
    # @schema
    # type: string
    # @schema
    # -- Disables the login page for the application
    # @section -- Umami
    disableLogin: '1'
    # @schema
    # type: boolean
    # @schema
    # -- setting this to true removes the environment variable DISABLE_LOGIN defined in `umami.disableLogin` from the deployment as this caused errors in some setups
    # @section -- Umami
    removeDisableLoginEnv: true
    # @schema
    # type: string
    # @schema
    # -- Umami collects completely anonymous telemetry data in order help improve the application. You can choose to disable this if you don't want to participate.
    # @section -- Umami
    disableTelemetry: "1"
    # @schema
    # type: string
    # @schema
    # -- Disables the check for new versions of Umami
    # @section -- Umami
    disableUpdates: "1"
    # @schema
    # type: string
    # @schema
    # -- Enables the internal test page, {host}/console. Admin access is required. Users can manually fire pageviews and events to their websites.
    # @section -- Umami
    enableTestConsole: "1"
    # @schema
    # type: string
    # @schema
    # -- This will redirect all requests from http to https in the Umami application. Note, this does not apply to the tracking script.
    # @section -- Umami
    forceSSL: "1"
    # @schema
    # type: string
    # @schema
    # -- hostname under which Umami will be reached
    # @section -- Umami
    hostname: "0.0.0.0"
    # @schema
    # type: string
    # @schema
    # -- This will do a DNS lookup on a hostname and the resulting IP address will be ignored. This can be a comma delimited list of hostnames.
    # @section -- Umami
    ignoreHostname: ""
    # @schema
    # type: string
    # @schema
    # -- You can provide a comma-delimited list of IP address to exclude from data collection.
    # @section -- Umami
    ignoredIpAddresses: ""
    # @schema
    # type: string
    # @schema
    # -- If you are running in development mode, this will log database queries to the console for debugging.
    # @section -- Umami
    logQuery: "1"
    # @schema
    # type: string
    # @schema
    # -- Removes the trailing slash from all incoming urls.
    # @section -- Umami
    removeTrailingSlash: "1"
    # @schema
    # type: string
    # @schema
    # -- Allows you to assign a custom name to the tracker script different from the default umami. This is to help you avoid some ad-blockers.
    # @section -- Umami
    trackerScriptName: "umami"
    # @schema
    # type: object
    # @schema
    # App secret configurations
    appSecret:
      # @schema
      # type: string
      # @schema
      # -- A random string used to generate unique values.
      # @section -- Umami
      secret: ""
      # @schema
      # type: string
      # @schema
      # -- Name of an existing secret containing the app secret under the key app-secret.
      # @section -- Umami
      existingSecret: ""
      # @schema
      # type: string
      # @schema
      # -- Key in the existing secret containing the value (default: app-secret)
      # @section -- Umami
      existingSecretKey: ""
    # @schema
    # type: object
    # @schema
    # Database configurations
    database:
      # @schema
      # type: string
      # @schema
      # -- Full connection string
      # @section -- Umami
      uri: ""
      # @schema
      # type: object
      # @schema
      # Auth settings
      auth:
        # @schema
        # type: string
        # @schema
        # -- Database name
        # @section -- Umami
        database: ""
        # @schema
        # type: string
        # @schema
        # -- Database username
        # @section -- Umami
        username: ""
        # @schema
        # type: string
        # @schema
        # -- Database password
        # @section -- Umami
        password: ""
        # @schema
        # type: string
        # @schema
        # -- Database hostname
        # @section -- Umami
        hostname: ""
      # @schema
      # type: string
      # @schema
      # -- Use an existing secret containing the database uri.
      # @section -- Umami
      existingSecret: ""
      # @schema
      # type: string
      # @schema
      # -- Key in the existing secret containing value (default: database-url)
      # @section -- Umami
      existingSecretKey: ""
  # @schema
  # type: object
  # @schema
  # Your custom collect image
  image:
    # @schema
    # type: string
    # @schema
    # -- The image registry
    # @section -- Umami
    registry: ghcr.io
    # @schema
    # type: string
    # @schema
    # -- The image repository
    # @section -- Umami
    repository: umami-software/umami
    # @schema
    # enum: [IfNotPresent, Always]
    # @schema
    # -- The image pull policy
    # @section -- Umami
    pullPolicy: IfNotPresent
    # @schema
    # type: string
    # @schema
    # -- The image tag
    # @section -- Umami
    tag: postgresql-v2.19.0
  # @schema
  # type: integer
  # @schema
  # -- Number of replicas
  # @section -- Umami
  replicaCount: 1
  # @schema
  # type: [integer, null]
  # @schema
  # -- Pod Disruption Budget maxUnavailable
  # @section -- Umami
  maxUnavailable: null
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Host aliases to add
  # @section -- Umami
  hostAliases: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Image pull secrets
  # @section -- Umami
  imagePullSecrets: []
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Annotations for pods
  # @section -- Umami
  podAnnotations: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Labels for pods
  # @section -- Umami
  podLabels: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- The SecurityContext for pods
  # @section -- Umami
  podSecurityContext: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Security context
  # @section -- Umami
  securityContext: {}
  # @schema
  # type: object
  # @schema
  # Service settings
  service:
    # @schema
    # type: integer
    # @schema
    # -- Port of the service
    # @section -- Umami
    port: 8000
    # @schema
    # type: string
    # @schema
    # -- Type of the service
    # @section -- Umami
    type: ClusterIP
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Annotations for the service
    # @section -- Umami
    annotations: {}
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Labels for service
    # @section -- Umami
    labels: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Resource request & limits.
  # @section -- Umami
  resources: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Startup probe settings for pods.
  # @section -- Umami
  startupProbe: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Readiness probe settings for pods.
  # @section -- Umami
  readinessProbe:
    httpGet:
      path: /
      port: http
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Liveness probe settings for pods.
  # @section -- Umami
  livenessProbe:
    httpGet:
      path: /
      port: http
  # @schema
  # type: object
  # @schema
  # Autoscaling settings
  autoscaling:
    # @schema
    # type: boolean
    # @schema
    # -- Enable autoscaling
    # @section -- Umami
    enabled: false
    # @schema
    # type: integer
    # @schema
    # -- Minimum autoscaling replicas
    # @section -- Umami
    minReplicas: 1
    # @schema
    # type: integer
    # @schema
    # -- Maximum autoscaling replicas
    # @section -- Umami
    maxReplicas: 100
    # @schema
    # type: [integer, null]
    # @schema
    # -- Target CPU utilisation percentage
    # @section -- Umami
    targetCPUUtilizationPercentage: 80
    # @schema
    # type: [integer, null]
    # @schema
    # -- Target memory utilisation percentage
    # @section -- Umami
    targetMemoryUtilizationPercentage: null
    # @schema
    # type: array
    # items:
    #   type: object
    #   additionalProperties: true
    # @schema
    # -- Custom metrics using the HPA/v2 schema
    # @section -- Umami
    customMetrics: []
    # @schema
    # type: object
    # @schema
    # Behavior settings
    behavior:
      # @schema
      # type: boolean
      # @schema
      # -- Enable autoscaling behaviours
      # @section -- Umami
      enabled: false
      # @schema
      # type: object
      # additionalProperties: true
      # @schema
      # -- Scale down policies, must conform to HPAScalingRules
      # @section -- Umami
      scaleDown: {}
      # @schema
      # type: object
      # additionalProperties: true
      # @schema
      # -- Scale up policies, must conform to HPAScalingRules
      # @section -- Umami
      scaleUp: {}
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables to add
  # @section -- Umami
  extraEnv: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Port definitions to add
  # @section -- Umami
  extraPorts: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables from secrets or configmaps to add
  # @section -- Umami
  extraEnvFrom: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volume mounts to add
  # @section -- Umami
  extraVolumeMounts: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volumes to add
  # @section -- Umami
  extraVolumes: []
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Tolerations settings for pods.
  # @section -- Umami
  nodeSelector: {}
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Tolerations settings for pods.
  # @section -- Umami
  tolerations: []
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Affinity settings for pods.
  # @section -- Umami
  affinity: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- DNSConfig settings for pods.
  # @section -- Umami
  dnsConfig: {}

# @schema
# type: object
# @schema
# Ingress configuration
ingress:
  # @schema
  # type: boolean
  # @schema
  # -- Enable ingress
  # @section -- Ingress
  enabled: false
  # @schema
  # type: string
  # @schema
  # -- Ingress class name
  # @section -- Ingress
  className: ""
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Annotations
  # @section -- Ingress
  annotations: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Path settings
  # @section -- Ingress
  paths:
    umami:
      - path: /
        pathType: Prefix
        port: 8000
  # @schema
  # type: array
  # items:
  #   type: string
  # @schema
  # -- Ingress hosts
  # @section -- Ingress
  hosts: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Ingress tls
  # @section -- Ingress
  tls: []

# @schema
# type: object
# @schema
# Routing settings
routing:
  # @schema
  # type: boolean
  # @schema
  # -- Indicates wether routing is enabled or not
  # @section -- Routing
  enabled: false
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Path matches
  # @section -- Routing
  paths: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Parent references
  # @section -- Routing
  parentRefs: []

# @schema
# type: object
# @schema
# Service account settings
serviceAccount:
  # @schema
  # type: string
  # @schema
  # -- The name of the service account to use.
  # @section -- Service Account
  name: ""
  # @schema
  # type: boolean
  # @schema
  # -- Specifies whether a service account should be created
  # @section -- Service Account
  create: true
  # @schema
  # type: boolean
  # @schema
  # -- Automatically mount a ServiceAccount's API credentials?
  # @section -- Service Account
  automount: true
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Annotations to add to the service account
  # @section -- Service Account
  annotations: { }

# @schema
# type: object
# @schema
# Network Policy settings
networkPolicy:
  # @schema
  # type: boolean
  # @schema
  # -- Specifies whether Network Policies should be created
  # @section -- Network Policy
  enabled: false
  # @schema
  # type: array
  # items:
  #   type: string
  # @schema
  # -- List of rules to apply via labels
  # @section -- Network Policy
  rules: []
  # rules:
  #   - allow-nginx-ingress
  #   - allow-internet-egress
  #   - allow-my-service-access
  # @schema
  # type: object
  # @schema
  # Ingress settings
  # @section -- Network Policy
  ingress:
    # @schema
    # type: boolean
    # @schema
    # -- Specifies whether ingress should be enabled
    # @section -- Network Policy
    enabled: true
    # @schema
    # type: boolean
    # @schema
    # -- Allow ingress through labels
    # @section -- Network Policy
    allowExternal: true
    # @schema
    # type: array
    # items:
    #   type: string
    #   additionalProperties: true
    # @schema
    # -- Additional ingress rules
    # @section -- Network Policy
    additionalRules: []
  # @schema
  # type: object
  # @schema
  # Egress settings
  # @section -- Network Policy
  egress:
    # @schema
    # type: boolean
    # @schema
    # -- Specifies whether egress should be enabled
    # @section -- Network Policy
    enabled: true
    # @schema
    # type: boolean
    # @schema
    # -- Allow ingress through labels
    # @section -- Network Policy
    allowExternal: true
    # @schema
    # type: array
    # items:
    #   type: string
    # @schema
    # -- Additional egress rules
    # @section -- Network Policy
    additionalRules: []

# @schema
# type: object
# @schema
# Scheduling settings
scheduling:
  # @schema
  # type: boolean
  # @schema
  # -- Indicates wether scheduling is enabled or not
  # @section -- Scheduling
  enabled: false
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Affinity for pod assignment
  # @section -- Scheduling
  affinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: In
              values: [""]
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Node labels for pod assignment
  # @section -- Scheduling
  nodeSelector: {}
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Tolerations for pod assignment
  # @section -- Scheduling
  tolerations: []
  # @schema
  # type: [string, null]
  # @schema
  # -- Priority class name
  # @section -- Scheduling
  priorityClass: null
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Tolerations for pod assignment
  # @section -- Scheduling
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: "kubernetes.io/hostname"
      whenUnsatisfiable: DoNotSchedule
      matchLabelKeys:
        - pod-template-hash
    - maxSkew: 1
      topologyKey: "topology.kubernetes.io/zone"
      whenUnsatisfiable: ScheduleAnyway

# RBAC configuration
rbac:
  # -- Create PodSecurityPolicy.
  enabled: false
