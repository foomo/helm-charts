# yaml-language-server: $schema=values.schema.json

# @schema
# type: string
# @schema
# -- Overrides the chart's name
# @section -- Overrides
nameOverride: ''
# @schema
# type: string
# @schema
# -- Overrides the chart's computed fullname
# @section -- Overrides
fullnameOverride: ''
# @schema
# type: string
# @schema
# -- The name of the Namespace to deploy
# @section -- Overrides
namespaceOverride: ''

# @schema
# type: string
# deprecated: true
# @schema
# -- Squadron fleet name
# @section -- Deprecated
fleet: ''
# @schema
# type: string
# deprecated: true
# @schema
# -- Squadron name
# @section -- Deprecated
squadron: ''
# @schema
# type: string
# deprecated: true
# @schema
# -- Squadron unit name
# @section -- Deprecated
unit: ''

# @schema
# type: integer
# @schema
# -- Number of revisions to keep
# @section -- General
revisionHistoryLimit: 10
# @schema
# enum: [RollingUpdate, Recreate]
# @schema
# -- Deployment update strategy
# @section -- General
updateStrategy: RollingUpdate

# @schema
# type: object
# @schema
# Google Tag Manager Settings
gtm:
  # @schema
  # type: string
  # required: true
  # @schema
  # -- Base64-encoded container parameters in the URL query string format
  # @section -- Google Tag Manager
  containerConfig: ''
  # @schema
  # type: integer
  # @schema
  # -- Interval between container refreshes
  # @section -- Google Tag Manager
  containerRefreshSeconds: 60
  # @schema
  # type: string
  # @schema
  # -- (Optional) Base64-encoded service account credential that is authorized to access resources
  # @section -- Google Tag Manager
  googleApplicationCredentials: ''
  # @schema
  # type: string
  # @schema
  # -- (Optional) Google Cloud project ID
  # @section -- Google Tag Manager
  googleCloudProject: ''
  # @schema
  # type: object
  # @schema
  # Image settings
  image:
    # @schema
    # type: string
    # required: true
    # @schema
    # -- The image repository
    # @section -- Google Tag Manager
    repository: gcr.io/cloud-tagging-10302018/gtm-cloud-image
    # @schema
    # enum: [IfNotPresent, Always]
    # @schema
    # -- Image tag
    # @section -- Google Tag Manager
    pullPolicy: IfNotPresent
    # @schema
    # type: string
    # required: true
    # @schema
    # -- The image tag of the [release](https://console.cloud.google.com/artifacts/docker/cloud-tagging-10302018/us/gcr.io/gtm-cloud-image?pli=1)
    # @section -- Google Tag Manager
    tag: "2.4.0"

# @schema
# type: object
# @schema
# TLS Reverse Proxy settings
# All urls have to be valid https urls, so proxy https traffic to your containers.
# Create a self-signed certificate by running
# $ openssl req -x509 -newkey rsa:2048 -keyout tls.key -out tls.crt -nodes -subj '/CN=sesamy'
proxy:
  # @schema
  # type: string
  # @schema
  # -- Nginx SSL Reverse Proxy config
  # @section -- HTTPS Proxy
  config: |
    server {
      listen              443 ssl;

      ssl_certificate     /etc/nginx/ssl/tls.crt;
      ssl_certificate_key /etc/nginx/ssl/tls.key;
      ssl_session_cache   shared:SSL:10m;
      ssl_session_timeout 1h;
      ssl_buffer_size     8k;

      location / {
          proxy_pass         http://0.0.0.0:{{ .Values.tagging.service.port }};
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection 'upgrade';
          proxy_cache_bypass $http_upgrade;
      }
    }
  # Image settings
  image:
    # @schema
    # type: string
    # required: true
    # @schema
    # -- The image repository
    # @section -- HTTPS Proxy
    repository: 'nginx'
    # @schema
    # enum: [IfNotPresent, Always]
    # required: true
    # @schema
    # -- The image pull policy
    # @section -- HTTPS Proxy
    pullPolicy: IfNotPresent
    # @schema
    # type: string
    # required: true
    # @schema
    # -- The image [tag](https://hub.docker.com/_/nginx)
    # @section -- HTTPS Proxy
    tag: '1.27.3-alpine'
  # @schema
  # type: object
  # @schema
  # TLS settings
  tls:
    # @schema
    # type: string
    # @schema
    # -- Base64 encoded TLS key
    # @section -- HTTPS Proxy
    key: ''
    # @schema
    # type: string
    # @schema
    # -- Base64 encoded TLS cert
    # @section -- HTTPS Proxy
    crt: ''
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Resource request & limits
  # @section -- HTTPS Proxy
  resources: {}

# @schema
# type: object
# @schema
# GTM Tagging Settings
tagging:
  # @schema
  # type: integer
  # @schema
  # -- Number of replicas
  # @section -- Tagging
  replicaCount: 1
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Host aliases to add
  # @section -- Tagging
  hostAliases: []
  # hostAliases
  #   - ip: 1.2.3.4
  #     hostnames:
  #       - domain.tld
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Image pull secrets
  # @section -- Tagging
  imagePullSecrets: []
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Pod annotations
  # @section -- Tagging
  podAnnotations: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Labels for pods
  # @section -- Tagging
  podLabels: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- The SecurityContext for pods
  # @section -- Tagging
  podSecurityContext: {}
  # podSecurityContext
  #   fsGroup: 2000
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Security Context
  # @section -- Tagging
  securityContext: {}
  # securityContext
  #   capabilities:
  #     drop:
  #       - ALL
  #   readOnlyRootFilesystem: true
  #   runAsNonRoot: true
  #   runAsUser: 1000
  # @schema
  # type: object
  # @schema
  # Service settings
  service:
      # @schema
      # type: integer
      # @schema
      # -- Port of the service
      # @section -- Tagging
      port: 8080
      # @schema
      # enum: [ClusterIP, NodePort, LoadBalancer]
      # @schema
      # -- Type of the service
      # @section -- Tagging
      type: ClusterIP
      # @schema
      # type: object
      # additionalProperties: true
      # @schema
      # -- Annotations for the service
      # @section -- Tagging
      annotations: {}
      # @schema
      # type: [integer, null]
      # @schema
      # -- ClusterIP of the gateway service
      # @section -- Tagging
      clusterIP: null
      # @schema
      # type: [integer, null]
      # @schema
      # -- Node port if service type is NodePort
      # @section -- Tagging
      nodePort: null
      # @schema
      # type: [string, null]
      # @schema
      # -- Set appProtocol for the service
      # @section -- Tagging
      appProtocol: null
      # @schema
      # type: object
      # additionalProperties: true
      # @schema
      # -- Labels for service
      # @section -- Tagging
      labels: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Resource request & limits
  # @section -- Tagging
  resources: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Liveness probe settings for pods
  # @section -- Tagging
  startupProbe:
    httpGet:
      path: /healthz
      port: http
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Liveness probe settings for pods
  # @section -- Tagging
  livenessProbe:
    httpGet:
      path: /healthz
      port: http
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Readiness probe settings for pods
  # @section -- Tagging
  readinessProbe:
    httpGet:
      path: /healthz
      port: http
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables to add
  # @section -- Tagging
  extraEnv: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables from secrets or configmaps to add
  # @section -- Tagging
  extraEnvFrom: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volume mounts to add
  # @section -- Tagging
  extraVolumeMounts: []
  # extraVolumeMounts:
  #   - name: foo
  #     mountPath: "/etc/foo"
  #     readOnly: true
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volumes to add
  # @section -- Tagging
  extraVolumes: []
  # extraVolumes
  #   - name: foo
  #     secret:
  #       secretName: mysecret
  #       optional: false
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- DNSConfig settings for pods
  # @section -- Tagging
  dnsConfig: {}

# @schema
# type: object
# @schema
# GTM Preview configuration
preview:
  # @schema
  # type: integer
  # @schema
  # -- Number of replicas
  # @section -- Preview
  replicaCount: 1
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Host aliases to add
  # @section -- Preview
  hostAliases: []
  # hostAliases:
  #   - ip: 1.2.3.4
  #     hostnames:
  #       - domain.tld
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Image pull secrets
  # @section -- Preview
  imagePullSecrets: []
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Annotations for pods
  # @section -- Preview
  podAnnotations: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Labels for pods
  # @section -- Preview
  podLabels: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- The SecurityContext for pods
  # @section -- Preview
  podSecurityContext: {}
  # podSecurityContext:
  #   fsGroup: 2000
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Security Context
  # @section -- Preview
  securityContext: {}
  # securityContext:
  #   capabilities:
  #     drop:
  #       - ALL
  #   readOnlyRootFilesystem: true
  #   runAsNonRoot: true
  #   runAsUser: 1000
  # @schema
  # type: object
  # @schema
  # Service settings
  service:
    # @schema
    # type: integer
    # @schema
    # -- Port of the service
    # @section -- Preview
    port: 8080
    # @schema
    # enum: [ClusterIP, NodePort]
    # @schema
    # -- Type of the service
    # @section -- Preview
    type: ClusterIP
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Annotations for the service
    # @section -- Preview
    annotations: {}
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Labels for service
    # @section -- Preview
    labels: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Resource request & limits
  # @section -- Preview
  resources: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Startup probe settings for pods
  # @section -- Preview
  startupProbe:
    httpGet:
      path: /healthz
      port: http
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Readiness probe settings for pods
  # @section -- Preview
  readinessProbe:
    httpGet:
      path: /healthz
      port: http
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Liveness probe settings for pods
  # @section -- Preview
  livenessProbe:
    httpGet:
      path: /healthz
      port: http
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables to add
  # @section -- Preview
  extraEnv: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables from secrets or configmaps to add
  # @section -- Preview
  extraEnvFrom: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volume mounts to add
  # @section -- Preview
  extraVolumeMounts: []
  # extraVolumeMounts:
  #   - name: foo
  #     mountPath: "/etc/foo"
  #     readOnly: true
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volumes to add
  # @section -- Preview
  extraVolumes: []
  # extraVolumes:
  #   - name: foo
  #     secret:
  #       secretName: mysecret
  #       optional: false
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- DNSConfig settings for pods
  # @section -- Preview
  dnsConfig: {}

# @schema
# type: object
# @schema
# Custom GTM collect configuration
collect:
  # @schema
  # type: boolean
  # @schema
  # -- Enable collect
  # @section -- Collect
  enabled: false
  # @schema
  # type: integer
  # @schema
  # -- Number of replicas
  # @section -- Collect
  replicaCount: 1
  # @schema
  # type: object
  # @schema
  # Image settings
  image:
    # @schema
    # type: boolean
    # @schema
    # -- Force recreation
    # @section -- Collect
    recreate: false
    # @schema
    # type: string
    # required: true
    # @schema
    # -- The image repository
    # @section -- Collect
    repository: ''
    # @schema
    # enum: [IfNotPresent, Always]
    # @schema
    # -- The image pull policy
    # @section -- Collect
    pullPolicy: IfNotPresent
    # @schema
    # type: string
    # required: true
    # @schema
    # -- The image tag
    # @section -- Collect
    tag: ''
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Host aliases to add
  # @section -- Collect
  hostAliases: []
  # hostAliases:
  #   - ip: 1.2.3.4
  #     hostnames:
  #       - domain.tld
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Image pull secrets
  # @section -- Collect
  imagePullSecrets: []
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Annotations for pods
  # @section -- Collect
  podAnnotations: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Labels for pods
  # @section -- Collect
  podLabels: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- The SecurityContext for pods
  # @section -- Collect
  podSecurityContext: {}
  # podSecurityContext:
  #   fsGroup: 2000
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Security Context
  # @section -- Collect
  securityContext: {}
  # securityContext:
  #   capabilities:
  #     drop:
  #       - ALL
  #   readOnlyRootFilesystem: true
  #   runAsNonRoot: true
  #   runAsUser: 1000
  # @schema
  # type: object
  # @schema
  # Service settings
  service:
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Ports of the service
    # @section -- Collect
    ports:
      ga4: 8080
      mpv2: 8081
    # -- Type of the service
    # @section -- Collect
    type: ClusterIP
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Annotations for the service
    # @section -- Collect
    annotations: {}
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Labels for service
    # @section -- Collect
    labels: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Resource request & limits
  # @section -- Collect
  resources: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Startup probe settings for pods
  # @section -- Collect
  startupProbe: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Readiness probe settings for pods
  # @section -- Collect
  readinessProbe: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Liveness probe settings for pods
  # @section -- Collect
  livenessProbe: {}
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables to add
  # @section -- Collect
  extraEnv: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Port definitions to add
  # @section -- Collect
  extraPorts: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Environment variables from secrets or configmaps to add
  # @section -- Collect
  extraEnvFrom: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volume mounts to add
  # @section -- Collect
  extraVolumeMounts: []
  #  - name: foo
  #    mountPath: "/etc/foo"
  #    readOnly: true
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Volumes to add
  # @section -- Collect
  extraVolumes: []
  #  - name: foo
  #    secret:
  #      secretName: mysecret
  #      optional: false
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- DNSConfig settings for pods
  # @section -- Collect
  dnsConfig: {}

# @schema
# type: object
# @schema
# Ingress configuration
ingress:
  # @schema
  # type: boolean
  # @schema
  # -- Enable ingress
  # @section -- Ingress
  enabled: false
  # @schema
  # type: string
  # @schema
  # -- Ingress class name
  # @section -- Ingress
  className: ''
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Annotations
  # @section -- Ingress
  annotations: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Path settings
  # @section -- Ingress
  paths:
    preview:
      - path: /gtm
        pathType: Prefix
        port: 8080
    tagging:
      - path: /gtm.js
        pathType: Exact
        port: 8080
      - path: /_set_cookie
        pathType: Exact
        port: 8080
      - path: /gtag/js
        pathType: Prefix
        port: 8080
      # Comment if `collect.enabled=true`
      - path: /g/collect
        pathType: Prefix
        port: 8080
    # Uncomment if `collect.enabled=true`
    # collect:
    #   - path: /g/collect
    #     pathType: Prefix
    #     port: 8080
  # @schema
  # type: array
  # items:
  #   type: string
  # @schema
  # -- Hosts to listen to
  # @section -- Ingress
  hosts: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Tls setttings
  # @section -- Ingress
  tls: []

# @schema
# type: object
# @schema
# Routing settings
routing:
  # @schema
  # type: boolean
  # @schema
  # -- Indicates wether routing is enabled or not
  # @section -- Routing
  enabled: false
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Path matches
  # @section -- Routing
  paths:
    preview:
      - path: /gtm
        pathType: PathPrefix
        port: 8080
    tagging:
      - path: /gtm.js
        pathType: Exact
        port: 8080
      - path: /_set_cookie
        pathType: Exact
        port: 8080
      - path: /gtag/js
        pathType: PathPrefix
        port: 8080
      # Comment if `collect.enabled=true`
      - path: /g/collect
        pathType: PathPrefix
        port: 8080
    # Uncomment if `collect.enabled=true`
    # collect:
    #   - path: /g/collect
    #     pathType: Prefix
    #     port: 8080
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Parent references
  # @section -- Routing
  parentRefs: []

# ServiceAccount configuration
serviceAccount:
  # @schema
  # type: boolean
  # @schema
  # -- Specifies whether a service account should be created
  # @section -- Service Account
  create: true
  # @schema
  # type: boolean
  # @schema
  # -- Automatically mount a ServiceAccount's API credentials?
  # @section -- Service Account
  automount: true
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Annotations to add to the service account
  # @section -- Service Account
  annotations: {}
  # @schema
  # type: string
  # @schema
  # -- The name of the service account to use
  # @section -- Service Account
  name: ''

# @schema
# type: object
# additionalProperties: true
# @schema
# ServiceMonitor settings
serviceMonitor:
  # @schema
  # type: boolean
  # @schema
  # -- If enabled, ServiceMonitor resources for Prometheus Operator are created
  # @section -- Service Monitor
  enabled: false
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- ServiceMonitor annotations
  # @section -- Service Monitor
  annotations: {}
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Additional ServiceMonitor labels
  # @section -- Service Monitor
  labels: {}
  # @schema
  # type: string
  # @schema
  # -- ServiceMonitor scrape interval
  # @section -- Service Monitor
  interval: ''
  # @schema
  # type: string
  # @schema
  # -- ServiceMonitor scrape timeout in Go duration format (e.g. 15s)
  # @section -- Service Monitor
  scrapeTimeout: ''
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- ServiceMonitor relabel configs to apply to samples before scraping
  # @section -- Service Monitor
  relabelings: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- ServiceMonitor metric relabel configs to apply to samples before ingestion
  # @section -- Service Monitor
  metricRelabelings: []
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- ServiceMonitor will add labels from the service to the Prometheus metric
  # @section -- Service Monitor
  targetLabels: []

# @schema
# type: object
# @schema
# Autoscaling settings
autoscaling:
  # @schema
  # type: boolean
  # @schema
  # -- Enable autoscaling
  # @section -- Autoscaling
  enabled: false
  # @schema
  # type: integer
  # @schema
  # -- Minimum replication number
  # @section -- Autoscaling
  minReplicas: 1
  # @schema
  # type: integer
  # @schema
  # -- Maximum replication number
  # @section -- Autoscaling
  maxReplicas: 9
  # @schema
  # type: [integer, string]
  # @schema
  # -- Minimum availablity
  # @section -- Autoscaling
  minAvailable: ''
  # @schema
  # type: [integer, string]
  # @schema
  # -- Maximum unavailablity
  # @section -- Autoscaling
  maxUnavailable: 1
  # @schema
  # type: [integer, null]
  # @schema
  # -- Target CPU utilization
  # @section -- Autoscaling
  targetCPU: 75
  # @schema
  # type: [integer, null]
  # @schema
  # -- Target Memory utilization
  # @section -- Autoscaling
  targetMemory: null
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Additional scaling metrics
  # @section -- Autoscaling
  additionalMetrics: { }
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Autoscaling behavior settings
  # @section -- Autoscaling
  behavior: { }

# @schema
# type: object
# @schema
# Scheduling settings
scheduling:
  # @schema
  # type: boolean
  # @schema
  # -- Indicates wether scheduling is enabled or not
  # @section -- Scheduling
  enabled: false
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Affinity for pod assignment
  # @section -- Scheduling
  affinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/master
              operator: In
              values: [""]
  # @schema
  # type: object
  # additionalProperties: true
  # @schema
  # -- Node labels for pod assignment
  # @section -- Scheduling
  nodeSelector: {}
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Tolerations for pod assignment
  # @section -- Scheduling
  tolerations: []
  # @schema
  # type: [string, null]
  # additionalProperties: true
  # @schema
  # -- Priority class name
  # @section -- Scheduling
  priorityClass: null
  # @schema
  # type: array
  # items:
  #   type: object
  #   additionalProperties: true
  # @schema
  # -- Tolerations for pod assignment
  # @section -- Scheduling
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: "kubernetes.io/hostname"
      whenUnsatisfiable: DoNotSchedule
      matchLabelKeys:
        - pod-template-hash
    - maxSkew: 1
      topologyKey: "topology.kubernetes.io/zone"
      whenUnsatisfiable: ScheduleAnyway

# @schema
# type: object
# @schema
# NetworkPolicy settings
networkPolicy:
  # @schema
  # type: boolean
  # @schema
  # -- Specifies whether Network Policies should be created
  # @section -- Network Policy
  enabled: false
  # @schema
  # type: object
  # @schema
  # Metrics settings
  metrics:
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Specifies the Pods which are allowed to access the metrics port
    # @section -- Network Policy
    podSelector: {}
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Specifies the namespaces which are allowed to access the metrics port
    # @section -- Network Policy
    namespaceSelector: {}
    # @schema
    # type: array
    # items:
    #   type: string
    # @schema
    # -- Specifies specific network CIDRs which are allowed to access the metrics port
    # @section -- Network Policy
    cidrs: []
  # @schema
  # type: object
  # @schema
  # Ingress settings
  ingress:
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Specifies the Pods which are allowed to access the http port
    # @section -- Network Policy
    podSelector: {}
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Specifies the namespaces which are allowed to access the http port
    # @section -- Network Policy
    namespaceSelector: {}
  # @schema
  # type: object
  # @schema
  # External storage settings
  # @section -- Network Policy
  externalStorage:
    # @schema
    # type: array
    # items:
    #   type: integer
    # @schema
    # -- Specify the port used for external storage, e.g. AWS S3
    # @section -- Network Policy
    ports: []
    # @schema
    # type: array
    # items:
    #   type: string
    # @schema
    # -- Specifies specific network CIDRs you want to limit access to
    # @section -- Network Policy
    cidrs: []
  # @schema
  # type: object
  # @schema
  # Discovery settings
  discovery:
    # @schema
    # type: [integer, null]
    # @schema
    # -- Specify the port used for discovery
    # @section -- Network Policy
    port: null
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Specifies the Pods labels used for discovery
    # @section -- Network Policy
    podSelector: {}
    # @schema
    # type: object
    # additionalProperties: true
    # @schema
    # -- Specifies the namespace the discovery Pods are running in
    # @section -- Network Policy
    namespaceSelector: {}

# @schema
# type: object
# @schema
# RBAC settings
rbac:
  # @schema
  # type: boolean
  # @schema
  # -- Indicates wether scheduling is enabled or not
  # @section -- RBAC settings
  enabled: false
