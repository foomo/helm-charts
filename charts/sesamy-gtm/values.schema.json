{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "autoscaling": {
      "additionalProperties": false,
      "description": "Autoscaling settings",
      "properties": {
        "additionalMetrics": {
          "additionalProperties": true,
          "description": "Additional scaling metrics",
          "required": [],
          "title": "additionalMetrics",
          "type": "object"
        },
        "behavior": {
          "additionalProperties": true,
          "description": "Autoscaling behavior settings",
          "required": [],
          "title": "behavior",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enable autoscaling",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 9,
          "description": "Maximum replication number",
          "required": [],
          "title": "maxReplicas",
          "type": "integer"
        },
        "maxUnavailable": {
          "default": 1,
          "description": "Maximum unavailablity",
          "required": [],
          "title": "maxUnavailable",
          "type": [
            "integer",
            "string"
          ]
        },
        "minAvailable": {
          "default": "",
          "description": "Minimum availablity",
          "required": [],
          "title": "minAvailable",
          "type": [
            "integer",
            "string"
          ]
        },
        "minReplicas": {
          "default": 1,
          "description": "Minimum replication number",
          "required": [],
          "title": "minReplicas",
          "type": "integer"
        },
        "targetCPU": {
          "default": 75,
          "description": "Target CPU utilization",
          "required": [],
          "title": "targetCPU",
          "type": [
            "integer",
            "null"
          ]
        },
        "targetMemory": {
          "default": "null",
          "description": "Target Memory utilization",
          "required": [],
          "title": "targetMemory",
          "type": [
            "integer",
            "null"
          ]
        }
      },
      "required": [],
      "title": "autoscaling",
      "type": "object"
    },
    "collect": {
      "additionalProperties": false,
      "description": "Custom GTM collect configuration",
      "properties": {
        "dnsConfig": {
          "additionalProperties": true,
          "description": " - name: foo\n   secret:\n     secretName: mysecret\n     optional: false\nDNSConfig settings for pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enable collect",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "extraEnv": {
          "description": "Environment variables to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraPorts": {
          "description": "Port definitions to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraPorts",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": " - name: foo\n   mountPath: \"/etc/foo\"\n   readOnly: true\nVolumes to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "Host aliases to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "image": {
          "additionalProperties": false,
          "description": "Image settings",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "The image pull policy",
              "enum": [
                "IfNotPresent",
                "Always"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "recreate": {
              "default": false,
              "description": "Force recreation",
              "required": [],
              "title": "recreate",
              "type": "boolean"
            },
            "repository": {
              "default": "",
              "description": "The image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "",
              "description": "The image tag",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repository",
            "tag"
          ],
          "title": "image",
          "type": "object"
        },
        "imagePullSecrets": {
          "description": "hostAliases:\n  - ip: 1.2.3.4\n    hostnames:\n      - domain.tld\nImage pull secrets",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "Liveness probe settings for pods",
          "required": [],
          "title": "livenessProbe",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "Pod Security context",
          "properties": {
            "fsGroup": {
              "default": 1001,
              "description": "File system group id",
              "required": [],
              "title": "fsGroup",
              "type": "integer"
            },
            "runAsGroup": {
              "default": 1001,
              "description": "Run as group id",
              "required": [],
              "title": "runAsGroup",
              "type": "integer"
            },
            "runAsNonRoot": {
              "default": true,
              "description": "Indicates wether to run as non root user",
              "required": [],
              "title": "runAsNonRoot",
              "type": "boolean"
            },
            "runAsUser": {
              "default": 1001,
              "description": "Run as user id",
              "required": [],
              "title": "runAsUser",
              "type": "integer"
            },
            "seccompProfile": {
              "additionalProperties": true,
              "description": "Restrict a Container's Syscalls with seccomp",
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Readiness probe settings for pods",
          "required": [],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicaCount": {
          "default": 1,
          "description": "Number of replicas",
          "required": [],
          "title": "replicaCount",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource request \u0026 limits",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Container Security context",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "description": "Controls whether a process can gain more privileges than its parent process",
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "description": "Grant certain privileges to a process without granting all the privileges of the root user",
              "properties": {
                "drop": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [
                "drop"
              ],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "description": "Mounts the container's root filesystem as read-only",
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "service": {
          "additionalProperties": false,
          "description": "Service settings",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "ports": {
              "additionalProperties": true,
              "description": "Ports of the service",
              "properties": {
                "gtag": {
                  "default": 8080,
                  "required": [],
                  "title": "gtag",
                  "type": "integer"
                },
                "mpv2": {
                  "default": 8081,
                  "required": [],
                  "title": "mpv2",
                  "type": "integer"
                }
              },
              "required": [
                "gtag",
                "mpv2"
              ],
              "title": "ports",
              "type": "object"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of the service",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "service",
          "type": "object"
        },
        "startupProbe": {
          "additionalProperties": true,
          "description": "Startup probe settings for pods",
          "required": [],
          "title": "startupProbe",
          "type": "object"
        }
      },
      "required": [],
      "title": "collect",
      "type": "object"
    },
    "fleet": {
      "default": "",
      "deprecated": true,
      "description": "Squadron fleet name",
      "required": [],
      "title": "fleet",
      "type": "string"
    },
    "fullnameOverride": {
      "default": "",
      "description": "Overrides the chart's computed fullname",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "gtm": {
      "additionalProperties": false,
      "description": "Google Tag Manager Settings",
      "properties": {
        "containerConfig": {
          "default": "",
          "description": "Base64-encoded container parameters in the URL query string format",
          "required": [],
          "title": "containerConfig",
          "type": "string"
        },
        "containerRefreshSeconds": {
          "default": 60,
          "description": "Interval between container refreshes",
          "required": [],
          "title": "containerRefreshSeconds",
          "type": "integer"
        },
        "googleApplicationCredentials": {
          "default": "",
          "description": "(Optional) Base64-encoded service account credential that is authorized to access resources",
          "required": [],
          "title": "googleApplicationCredentials",
          "type": "string"
        },
        "googleCloudProject": {
          "default": "",
          "description": "(Optional) Google Cloud project ID",
          "required": [],
          "title": "googleCloudProject",
          "type": "string"
        },
        "image": {
          "additionalProperties": false,
          "description": "Image settings",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "Image tag",
              "enum": [
                "IfNotPresent",
                "Always"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "repository": {
              "default": "gcr.io/cloud-tagging-10302018/gtm-cloud-image",
              "description": "The image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "3.2.0",
              "description": "The image tag of the [release](https://console.cloud.google.com/artifacts/docker/cloud-tagging-10302018/us/gcr.io/gtm-cloud-image?pli=1)",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repository",
            "tag"
          ],
          "title": "image",
          "type": "object"
        }
      },
      "required": [
        "containerConfig"
      ],
      "title": "gtm",
      "type": "object"
    },
    "ingress": {
      "additionalProperties": false,
      "description": "Ingress configuration",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "description": "Ingress class name",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Enable ingress",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "Hosts to listen to",
          "items": {
            "required": [],
            "type": "string"
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "paths": {
          "additionalProperties": true,
          "description": "annotations\n  nginx.ingress.kubernetes.io/configuration-snippet: |\n    if ($request_uri ~ ^/gtm\\.js\\?(.+)$) {\n      more_set_headers \"Cache-Control: private, max-age=900, must-revalidate\";\n    }\n    if ($request_uri ~ ^/gtag\\/js\\?(.+)$) {\n      more_set_headers \"Cache-Control: private, max-age=900, must-revalidate\";\n    }\nPath settings",
          "properties": {
            "preview": {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/gtm",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "ImplementationSpecific",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "preview",
              "type": "array"
            },
            "tagging": {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/gtm.js",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "ImplementationSpecific",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/_/set_cookie",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "ImplementationSpecific",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/gtag/js",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "ImplementationSpecific",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/_/service_worker",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "ImplementationSpecific",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/g/collect",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "ImplementationSpecific",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "tagging",
              "type": "array"
            }
          },
          "required": [
            "preview",
            "tagging"
          ],
          "title": "paths",
          "type": "object"
        },
        "tls": {
          "description": "Tls setttings",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [],
      "title": "ingress",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Overrides the chart's name",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "namespaceOverride": {
      "default": "",
      "description": "The name of the Namespace to deploy",
      "required": [],
      "title": "namespaceOverride",
      "type": "string"
    },
    "networkPolicy": {
      "additionalProperties": false,
      "description": "NetworkPolicy settings",
      "properties": {
        "discovery": {
          "additionalProperties": false,
          "description": "Discovery settings",
          "properties": {
            "namespaceSelector": {
              "additionalProperties": true,
              "description": "Specifies the namespace the discovery Pods are running in",
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "podSelector": {
              "additionalProperties": true,
              "description": "Specifies the Pods labels used for discovery",
              "required": [],
              "title": "podSelector",
              "type": "object"
            },
            "port": {
              "default": "null",
              "description": "Specify the port used for discovery",
              "required": [],
              "title": "port",
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "required": [],
          "title": "discovery",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Specifies whether Network Policies should be created",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "externalStorage": {
          "additionalProperties": false,
          "description": "External storage settings",
          "properties": {
            "cidrs": {
              "description": "Specifies specific network CIDRs you want to limit access to",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "cidrs",
              "type": "array"
            },
            "ports": {
              "description": "Specify the port used for external storage, e.g. AWS S3",
              "items": {
                "required": [],
                "type": "integer"
              },
              "required": [],
              "title": "ports",
              "type": "array"
            }
          },
          "required": [],
          "title": "externalStorage",
          "type": "object"
        },
        "ingress": {
          "additionalProperties": false,
          "description": "Ingress settings",
          "properties": {
            "namespaceSelector": {
              "additionalProperties": true,
              "description": "Specifies the namespaces which are allowed to access the http port",
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "podSelector": {
              "additionalProperties": true,
              "description": "Specifies the Pods which are allowed to access the http port",
              "required": [],
              "title": "podSelector",
              "type": "object"
            }
          },
          "required": [],
          "title": "ingress",
          "type": "object"
        },
        "metrics": {
          "additionalProperties": false,
          "description": "Metrics settings",
          "properties": {
            "cidrs": {
              "description": "Specifies specific network CIDRs which are allowed to access the metrics port",
              "items": {
                "required": [],
                "type": "string"
              },
              "required": [],
              "title": "cidrs",
              "type": "array"
            },
            "namespaceSelector": {
              "additionalProperties": true,
              "description": "Specifies the namespaces which are allowed to access the metrics port",
              "required": [],
              "title": "namespaceSelector",
              "type": "object"
            },
            "podSelector": {
              "additionalProperties": true,
              "description": "Specifies the Pods which are allowed to access the metrics port",
              "required": [],
              "title": "podSelector",
              "type": "object"
            }
          },
          "required": [],
          "title": "metrics",
          "type": "object"
        }
      },
      "required": [],
      "title": "networkPolicy",
      "type": "object"
    },
    "preview": {
      "additionalProperties": false,
      "description": "GTM Preview configuration",
      "properties": {
        "dnsConfig": {
          "additionalProperties": true,
          "description": "extraVolumes:\n  - name: foo\n    secret:\n      secretName: mysecret\n      optional: false\nDNSConfig settings for pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "extraEnv": {
          "description": "Environment variables to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "extraVolumeMounts:\n  - name: foo\n    mountPath: \"/etc/foo\"\n    readOnly: true\nVolumes to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "Host aliases to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "imagePullSecrets": {
          "description": "hostAliases:\n  - ip: 1.2.3.4\n    hostnames:\n      - domain.tld\nImage pull secrets",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "Liveness probe settings for pods",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "livenessProbe",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Annotations for pods",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for pods",
          "properties": {
            "seccompProfile": {
              "additionalProperties": true,
              "description": "Restrict a Container's Syscalls with seccomp",
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Readiness probe settings for pods",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicaCount": {
          "default": 1,
          "description": "Number of replicas",
          "required": [],
          "title": "replicaCount",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource request \u0026 limits",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Container Security context",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "description": "Controls whether a process can gain more privileges than its parent process",
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "description": "Grant certain privileges to a process without granting all the privileges of the root user",
              "properties": {
                "drop": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [
                "drop"
              ],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": false,
              "description": "Mounts the container's root filesystem as read-only",
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "service": {
          "additionalProperties": false,
          "description": "Service settings",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "port": {
              "default": 8080,
              "description": "Port of the service",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of the service",
              "enum": [
                "ClusterIP",
                "NodePort"
              ],
              "required": [],
              "title": "type"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "startupProbe": {
          "additionalProperties": true,
          "description": "Startup probe settings for pods",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "startupProbe",
          "type": "object"
        }
      },
      "required": [],
      "title": "preview",
      "type": "object"
    },
    "proxy": {
      "additionalProperties": false,
      "description": "TLS Reverse Proxy settings\nAll urls have to be valid https urls, so proxy https traffic to your containers.\nCreate a self-signed certificate by running\n$ openssl req -x509 -newkey rsa:2048 -keyout tls.key -out tls.crt -nodes -subj '/CN=sesamy'",
      "properties": {
        "config": {
          "default": "server {\n  listen              443 ssl;\n\n  ssl_certificate     /etc/nginx/ssl/tls.crt;\n  ssl_certificate_key /etc/nginx/ssl/tls.key;\n  ssl_session_cache   shared:SSL:10m;\n  ssl_session_timeout 1h;\n  ssl_buffer_size     8k;\n\n  location / {\n      proxy_pass         http://0.0.0.0:{{ .Values.tagging.service.port }};\n      proxy_set_header   Host $host;\n      proxy_set_header   X-Real-IP $remote_addr;\n      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header   X-Forwarded-Host $server_name;\n      proxy_set_header   Upgrade $http_upgrade;\n      proxy_set_header   Connection 'upgrade';\n      proxy_cache_bypass $http_upgrade;\n  }\n}\n",
          "description": "Nginx SSL Reverse Proxy config",
          "required": [],
          "title": "config",
          "type": "string"
        },
        "image": {
          "additionalProperties": false,
          "description": "Image settings",
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "The image pull policy",
              "enum": [
                "IfNotPresent",
                "Always"
              ],
              "required": [],
              "title": "pullPolicy"
            },
            "repository": {
              "default": "nginx",
              "description": "The image repository",
              "required": [],
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "1.29.1-alpine",
              "description": "The image [tag](https://hub.docker.com/_/nginx)",
              "required": [],
              "title": "tag",
              "type": "string"
            }
          },
          "required": [
            "repository",
            "pullPolicy",
            "tag"
          ],
          "title": "image",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource request \u0026 limits",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Container Security context",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "description": "Controls whether a process can gain more privileges than its parent process",
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "description": "Grant certain privileges to a process without granting all the privileges of the root user",
              "required": [],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": false,
              "description": "Mounts the container's root filesystem as read-only",
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "tls": {
          "additionalProperties": false,
          "description": "TLS settings",
          "properties": {
            "crt": {
              "default": "",
              "description": "Base64 encoded TLS cert",
              "required": [],
              "title": "crt",
              "type": "string"
            },
            "key": {
              "default": "",
              "description": "Base64 encoded TLS key",
              "required": [],
              "title": "key",
              "type": "string"
            }
          },
          "required": [],
          "title": "tls",
          "type": "object"
        }
      },
      "required": [
        "image"
      ],
      "title": "proxy",
      "type": "object"
    },
    "revisionHistoryLimit": {
      "default": 10,
      "description": "Number of revisions to keep",
      "required": [],
      "title": "revisionHistoryLimit",
      "type": "integer"
    },
    "routing": {
      "additionalProperties": false,
      "description": "Routing settings",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Indicates wether routing is enabled or not",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "parentRefs": {
          "description": "Parent references",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "parentRefs",
          "type": "array"
        },
        "paths": {
          "additionalProperties": true,
          "description": "Path matches",
          "properties": {
            "preview": {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/gtm",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "PathPrefix",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "preview",
              "type": "array"
            },
            "tagging": {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/gtm.js",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "Exact",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/_set_cookie",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "Exact",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/gtag/js",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "PathPrefix",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/_/service_worker",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "Prefix",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  },
                  {
                    "additionalProperties": false,
                    "properties": {
                      "path": {
                        "default": "/g/collect",
                        "required": [],
                        "title": "path",
                        "type": "string"
                      },
                      "pathType": {
                        "default": "PathPrefix",
                        "required": [],
                        "title": "pathType",
                        "type": "string"
                      },
                      "port": {
                        "default": 8080,
                        "required": [],
                        "title": "port",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "path",
                      "pathType",
                      "port"
                    ],
                    "type": "object"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "tagging",
              "type": "array"
            }
          },
          "required": [
            "preview",
            "tagging"
          ],
          "title": "paths",
          "type": "object"
        }
      },
      "required": [],
      "title": "routing",
      "type": "object"
    },
    "scheduling": {
      "additionalProperties": false,
      "description": "Scheduling settings",
      "properties": {
        "affinity": {
          "additionalProperties": true,
          "description": "Affinity for pod assignment",
          "properties": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "additionalProperties": false,
              "properties": {
                "nodeSelectorTerms": {
                  "items": {
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "matchExpressions": {
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "properties": {
                                    "key": {
                                      "default": "node-role.kubernetes.io/control-plane",
                                      "required": [],
                                      "title": "key",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "default": "In",
                                      "required": [],
                                      "title": "operator",
                                      "type": "string"
                                    },
                                    "values": {
                                      "items": {
                                        "anyOf": [
                                          {
                                            "required": [],
                                            "type": "string"
                                          }
                                        ],
                                        "required": []
                                      },
                                      "required": [],
                                      "title": "values",
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator",
                                    "values"
                                  ],
                                  "type": "object"
                                }
                              ],
                              "required": []
                            },
                            "required": [],
                            "title": "matchExpressions",
                            "type": "array"
                          }
                        },
                        "required": [
                          "matchExpressions"
                        ],
                        "type": "object"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "nodeSelectorTerms",
                  "type": "array"
                }
              },
              "required": [
                "nodeSelectorTerms"
              ],
              "title": "requiredDuringSchedulingIgnoredDuringExecution",
              "type": "object"
            }
          },
          "required": [
            "requiredDuringSchedulingIgnoredDuringExecution"
          ],
          "title": "affinity",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Indicates wether scheduling is enabled or not",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "nodeSelector": {
          "additionalProperties": true,
          "description": "Node labels for pod assignment",
          "required": [],
          "title": "nodeSelector",
          "type": "object"
        },
        "priorityClass": {
          "additionalProperties": true,
          "default": "null",
          "description": "Priority class name",
          "required": [],
          "title": "priorityClass",
          "type": [
            "string",
            "null"
          ]
        },
        "tolerations": {
          "description": "Tolerations for pod assignment",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "tolerations",
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "Tolerations for pod assignment",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "topologySpreadConstraints",
          "type": "array"
        }
      },
      "required": [],
      "title": "scheduling",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": false,
      "description": "ServiceAccount configuration",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "automount": {
          "default": false,
          "description": "Automatically mount a ServiceAccount's API credentials?",
          "required": [],
          "title": "automount",
          "type": "boolean"
        },
        "create": {
          "default": false,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceMonitor": {
      "additionalProperties": true,
      "description": "ServiceMonitor settings",
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "ServiceMonitor annotations",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "If enabled, ServiceMonitor resources for Prometheus Operator are created",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interval": {
          "default": "",
          "description": "ServiceMonitor scrape interval",
          "required": [],
          "title": "interval",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Additional ServiceMonitor labels",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "metricRelabelings": {
          "description": "ServiceMonitor metric relabel configs to apply to samples before ingestion",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "metricRelabelings",
          "type": "array"
        },
        "relabelings": {
          "description": "ServiceMonitor relabel configs to apply to samples before scraping",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "relabelings",
          "type": "array"
        },
        "scrapeTimeout": {
          "default": "",
          "description": "ServiceMonitor scrape timeout in Go duration format (e.g. 15s)",
          "required": [],
          "title": "scrapeTimeout",
          "type": "string"
        },
        "targetLabels": {
          "description": "ServiceMonitor will add labels from the service to the Prometheus metric",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "targetLabels",
          "type": "array"
        }
      },
      "required": [],
      "title": "serviceMonitor",
      "type": "object"
    },
    "squadron": {
      "default": "",
      "deprecated": true,
      "description": "Squadron name",
      "required": [],
      "title": "squadron",
      "type": "string"
    },
    "tagging": {
      "additionalProperties": false,
      "description": "GTM Tagging Settings",
      "properties": {
        "dnsConfig": {
          "additionalProperties": true,
          "description": "extraVolumes\n  - name: foo\n    secret:\n      secretName: mysecret\n      optional: false\nDNSConfig settings for pods",
          "required": [],
          "title": "dnsConfig",
          "type": "object"
        },
        "extraEnv": {
          "description": "Environment variables to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraEnv",
          "type": "array"
        },
        "extraEnvFrom": {
          "description": "Environment variables from secrets or configmaps to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraEnvFrom",
          "type": "array"
        },
        "extraVolumeMounts": {
          "description": "Volume mounts to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraVolumeMounts",
          "type": "array"
        },
        "extraVolumes": {
          "description": "extraVolumeMounts:\n  - name: foo\n    mountPath: \"/etc/foo\"\n    readOnly: true\nVolumes to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "extraVolumes",
          "type": "array"
        },
        "hostAliases": {
          "description": "Host aliases to add",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "hostAliases",
          "type": "array"
        },
        "imagePullSecrets": {
          "description": "hostAliases\n  - ip: 1.2.3.4\n    hostnames:\n      - domain.tld\nImage pull secrets",
          "items": {
            "additionalProperties": true,
            "required": [],
            "type": "object"
          },
          "required": [],
          "title": "imagePullSecrets",
          "type": "array"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "Liveness probe settings for pods",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "livenessProbe",
          "type": "object"
        },
        "podAnnotations": {
          "additionalProperties": true,
          "description": "Pod annotations",
          "required": [],
          "title": "podAnnotations",
          "type": "object"
        },
        "podLabels": {
          "additionalProperties": true,
          "description": "Labels for pods",
          "required": [],
          "title": "podLabels",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "The SecurityContext for pods",
          "properties": {
            "seccompProfile": {
              "additionalProperties": true,
              "description": "Restrict a Container's Syscalls with seccomp",
              "properties": {
                "type": {
                  "default": "RuntimeDefault",
                  "required": [],
                  "title": "type",
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "title": "seccompProfile",
              "type": "object"
            }
          },
          "required": [],
          "title": "podSecurityContext",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "Readiness probe settings for pods",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "readinessProbe",
          "type": "object"
        },
        "replicaCount": {
          "default": 1,
          "description": "Number of replicas",
          "required": [],
          "title": "replicaCount",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": true,
          "description": "Resource request \u0026 limits",
          "required": [],
          "title": "resources",
          "type": "object"
        },
        "securityContext": {
          "additionalProperties": true,
          "description": "Container Security context",
          "properties": {
            "allowPrivilegeEscalation": {
              "default": false,
              "description": "Controls whether a process can gain more privileges than its parent process",
              "required": [],
              "title": "allowPrivilegeEscalation",
              "type": "boolean"
            },
            "capabilities": {
              "additionalProperties": true,
              "description": "Grant certain privileges to a process without granting all the privileges of the root user",
              "properties": {
                "drop": {
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "drop",
                  "type": "array"
                }
              },
              "required": [
                "drop"
              ],
              "title": "capabilities",
              "type": "object"
            },
            "readOnlyRootFilesystem": {
              "default": true,
              "description": "Mounts the container's root filesystem as read-only",
              "required": [],
              "title": "readOnlyRootFilesystem",
              "type": "boolean"
            }
          },
          "required": [],
          "title": "securityContext",
          "type": "object"
        },
        "service": {
          "additionalProperties": false,
          "description": "Service settings",
          "properties": {
            "annotations": {
              "additionalProperties": true,
              "description": "Annotations for the service",
              "required": [],
              "title": "annotations",
              "type": "object"
            },
            "appProtocol": {
              "default": "null",
              "description": "Set appProtocol for the service",
              "required": [],
              "title": "appProtocol",
              "type": [
                "string",
                "null"
              ]
            },
            "clusterIP": {
              "default": "null",
              "description": "ClusterIP of the gateway service",
              "required": [],
              "title": "clusterIP",
              "type": [
                "integer",
                "null"
              ]
            },
            "labels": {
              "additionalProperties": true,
              "description": "Labels for service",
              "required": [],
              "title": "labels",
              "type": "object"
            },
            "nodePort": {
              "default": "null",
              "description": "Node port if service type is NodePort",
              "required": [],
              "title": "nodePort",
              "type": [
                "integer",
                "null"
              ]
            },
            "port": {
              "default": 8080,
              "description": "Port of the service",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "type": {
              "default": "ClusterIP",
              "description": "Type of the service",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ],
              "required": [],
              "title": "type"
            }
          },
          "required": [],
          "title": "service",
          "type": "object"
        },
        "startupProbe": {
          "additionalProperties": true,
          "description": "Liveness probe settings for pods",
          "properties": {
            "httpGet": {
              "additionalProperties": false,
              "properties": {
                "path": {
                  "default": "/healthz",
                  "required": [],
                  "title": "path",
                  "type": "string"
                },
                "port": {
                  "default": "http",
                  "required": [],
                  "title": "port",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "port"
              ],
              "title": "httpGet",
              "type": "object"
            }
          },
          "required": [
            "httpGet"
          ],
          "title": "startupProbe",
          "type": "object"
        }
      },
      "required": [],
      "title": "tagging",
      "type": "object"
    },
    "unit": {
      "default": "",
      "deprecated": true,
      "description": "Squadron unit name",
      "required": [],
      "title": "unit",
      "type": "string"
    },
    "updateStrategy": {
      "default": "RollingUpdate",
      "description": "Deployment update strategy",
      "enum": [
        "RollingUpdate",
        "Recreate"
      ],
      "required": [],
      "title": "updateStrategy"
    }
  },
  "required": [
    "serviceAccount"
  ],
  "type": "object"
}